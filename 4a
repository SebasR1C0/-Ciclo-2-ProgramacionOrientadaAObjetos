#pragma once
#ifndef UTIL_H
#define UTIL_H
#include <iostream>
#include <string>
using namespace std;
#define MAIN4
#endif
-------------------
#include "util.h"
class NvaClase {
    int x;
public:
    NvaClase(int x): x(x){}
    ~NvaClase() { 
        cout << "Ejecutando el Metodo Destructor " << x << endl;
    }
};
NvaClase obj_Clase(1);
#ifdef MAIN1
int main(){
    NvaClase obj2_clase(2);
    {
        NvaClase obj3_clase(3);
    }
    return 0;
}
#endif
-------------------
#include "util.h"
class MyClass {
    string v_cadena;
public:
    MyClass(string s) : v_cadena(move(s)) {
        cout << "Ejecutamos constructor 1" << endl;
    }
    MyClass(const MyClass &s) : v_cadena(string(s.v_cadena)) {
        cout << "Ejecutamos constructor 2" << endl;
    }
    ~MyClass() {
        cout << "Destructor Ejecutandose" << endl;
    }
    string& getString() { return v_cadena; }
};
#ifdef MAIN2
int main(){
    MyClass str1("Bienvenidos");
    MyClass str2(str1);
    cout << endl;
    cout << "Valor de Str2: " << str2.getString() << endl << endl;
    return 0;
}
#endif
---------------------------------------------
#include "util.h"
class miClase_P {
    int vp_a, vp_auxiliar;
public:
    void printMembers() {
        cout << "El valor de a es: " << vp_a << endl;
    }
    friend class miClase_A;
};
class miClase_A {
public: 
    void metodoClaseAmiga(int x, miClase_P& mc) {
        mc.vp_a = x;
        mc.vp_auxiliar = 13;
    }
};
class miClase_B {
    int vp_c;
public:
    void metodoClaseAmiga_B(int x, miClase_P& mc) {
        mc.printMembers();
    }
};
#ifdef MAIN3
int main(){
    miClase_P obj;
    miClase_A obj2;
    obj2.metodoClaseAmiga(10, obj);
    obj.printMembers();
    return 0;
}
#endif
-----------------------------------------------
#include "util.h"
class ClaseBase {
protected:
    int unVar = 0;
public:
    void unMetodo(void) {
        unVar++;
        cout << "Valor unVar= " << unVar << endl;
    }
};
class ClasesDerivada : public ClaseBase // sintaxis de ClasesDerivada hereda de ClasesBase
{};
#ifdef MAIN4
int main() {
    ClasesDerivada miobj;
    miobj.unMetodo();
    miobj.unMetodo();
    miobj.unMetodo();
    return 0;
}
#endif
